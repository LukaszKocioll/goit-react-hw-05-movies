{"version":3,"file":"static/js/410.747abf3f.chunk.js","mappings":"8PA+DA,EA1De,WACb,IAAAA,GAAsCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA3CI,EAAWF,EAAA,GAAEG,EAAcH,EAAA,GAClCI,GAA0CL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA/CE,EAAaD,EAAA,GAAEE,EAAgBF,EAAA,GAEhCG,EAAY,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEMC,EAAAA,EAAAA,IAAU,4CAA6C,CAC5EC,OAAQ,CACNC,MAAOjB,EACPkB,SAAU,QACVC,QAAS,sCAEV,KAAD,EANIR,EAAQC,EAAAQ,KAOdf,EAAiBM,EAASU,KAAKC,SAASV,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAW,GAAAX,EAAA,SAExCY,QAAQC,MAAM,uBAAsBb,EAAAW,IAAS,yBAAAX,EAAAc,OAAA,GAAAhB,EAAA,kBAEhD,kBAbiB,OAAAH,EAAAoB,MAAA,KAAAC,UAAA,KAqBlB,OACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mBAAkBC,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,YACJF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mBAAkBC,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,SACEC,KAAK,OACLC,YAAY,uBACZC,MAAOnC,EACPoC,SAAU,SAACC,GAAC,OAAKpC,EAAeoC,EAAEC,OAAOH,MAAM,EAC/CI,WAfe,SAACF,GACR,UAAVA,EAAEG,KACJlC,GAEJ,KAaM0B,EAAAA,EAAAA,KAAA,UAAQS,QAASnC,EAAayB,SAAC,eAEjCC,EAAAA,EAAAA,KAAA,MAAAD,SACG3B,EAAcsC,KAAI,SAACC,GAAK,OACvBd,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAA,KAAAD,SAAIY,EAAMC,SACVZ,EAAAA,EAAAA,KAAA,OACEa,IAAG,sCAAAC,OAAwCH,EAAMI,aACjDC,IAAKL,EAAMC,SAEbZ,EAAAA,EAAAA,KAACiB,EAAAA,GAAI,CAACC,GAAE,WAAAJ,OAAaH,EAAMQ,IAAMrB,UAAU,iBAAgBC,SAAC,cANrDY,EAAMQ,GASV,QAKf,C","sources":["components/Movies/Movies.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport './Movies.css';\n\nconst Movies = () => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n\n  const handleSearch = async () => {\n    try {\n      const response = await axios.get('https://api.themoviedb.org/3/search/movie', {\n        params: {\n          query: searchQuery,\n          language: 'en-US',\n          api_key: 'e4a99ef4b720df3722144e1a68094d0e',\n        },\n      });\n      setSearchResults(response.data.results);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter') {\n      handleSearch();\n    }\n  };\n\n  return (\n    <div className=\"movies-container\">\n      <h2>Movies</h2>\n      <div className=\"search-container\">\n        <input\n          type=\"text\"\n          placeholder=\"Search for movies...\"\n          value={searchQuery}\n          onChange={(e) => setSearchQuery(e.target.value)}\n          onKeyPress={handleKeyPress}\n        />\n        <button onClick={handleSearch}>Search</button>\n      </div>\n      <ul>\n        {searchResults.map((movie) => (\n          <li key={movie.id}>\n            <p>{movie.title}</p>\n            <img\n              src={`https://www.themoviedb.org/t/p/w500${movie.poster_path}`}\n              alt={movie.title}\n            />\n            <Link to={`/movies/${movie.id}`} className=\"details-button\">\n              Details\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\n\n\nexport default Movies;\n"],"names":["_useState","useState","_useState2","_slicedToArray","searchQuery","setSearchQuery","_useState3","_useState4","searchResults","setSearchResults","handleSearch","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","axios","params","query","language","api_key","sent","data","results","t0","console","error","stop","apply","arguments","_jsxs","className","children","_jsx","type","placeholder","value","onChange","e","target","onKeyPress","key","onClick","map","movie","title","src","concat","poster_path","alt","Link","to","id"],"sourceRoot":""}